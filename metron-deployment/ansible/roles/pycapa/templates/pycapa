#!/usr/bin/env bash
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# metron pycapa service
# chkconfig: 345 20 80
# description: Metron Pycapa Packet Capture Daemon
# processname: pycapa
#
NAME=pycapa
DESC="Pycapa - Apache Metron Packet Capture"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
LOGFILE="{{ pycapa_log }}"
EXTRA_ARGS="${@:2}"
DAEMON_PATH="{{ pycapa_home }}"

export LD_LIBRARY_PATH={{ python27_home }}/usr/lib64

case "$1" in

  ##############################################################################
  # start
  #
  start)
    printf "%-50s" "Starting $NAME..."

    # setup virtual environment
    cd $DAEMON_PATH
    . {{ pycapa_bin }}/activate

    # kick-off the daemon
    DAEMON_PATH="{{ pycapa_home }}"
    DAEMON="{{ pycapa_bin }}/pycapa"
    DAEMONOPTS+=" --producer "
    DAEMONOPTS+=" --kafka {{ kafka_broker_url }}"
    DAEMONOPTS+=" --topic {{ pycapa_topic }}"
    DAEMONOPTS+=" --interface {{ pycapa_sniff_interface }}"
    DAEMONOPTS+=" $EXTRA_ARGS"

    PID=`$DAEMON $DAEMONOPTS >> $LOGFILE 2>&1 & echo $!`
    if [ -z $PID ]; then
        printf "%s\n" "Fail"
    else
        echo $PID > $PIDFILE
        printf "%s\n" "Ok"
    fi
  ;;

  ##############################################################################
  # status
  #
  status)
    printf "%-50s" "Checking $NAME..."
    . {{ pycapa_bin }}/activate
    if [ -f $PIDFILE ]; then
      PID=`cat $PIDFILE`
      if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
        printf "%s\n" "Process dead but pidfile exists"
      else
        printf "%s\n" "Running"
      fi
    else
      printf "%s\n" "Service not running"
    fi
  ;;

  ##############################################################################
  # stop
  #
  stop)
    printf "%-50s" "Stopping $NAME"
    cd $DAEMON_PATH
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        while sleep 1
          echo -n "."
          kill -0 $PID >/dev/null 2>&1
        do
          kill $PID
        done

        printf "%s\n" "Ok"
        rm -f $PIDFILE
    else
        printf "%s\n" "pidfile not found"
    fi
  ;;

  ##############################################################################
  # restart
  #
  restart)
    $0 stop
    $0 start
  ;;

  *)
    echo "Usage: $0 {status|start|stop|restart}"
    exit 1
esac

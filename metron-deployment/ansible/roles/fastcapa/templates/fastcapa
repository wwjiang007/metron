#!/usr/bin/env bash
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# fastcapa daemon
# chkconfig: 345 20 80
# description: Packet capture probe
# processname: fastcapa
#

export LD_LIBRARY_PATH="{{ fastcapa_ld_library_path }}"

NAME="fastcapa"
DESC="Metron network packet capture probe"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
LOGROOT=/var/log/fastcapa
DAEMONLOG=$LOGROOT/$NAME-stdout.log
DAEMONERR=$LOGROOT/$NAME-stderr.log
NOW=`date`
DAEMON_PATH="/root"

PORT_MASK="{{ fastcapa_portmask }}"
KAFKA_TOPIC="{{ fastcapa_topic }}"
KAFKA_CONFIG="{{ fastcapa_kafka_config }}"
RX_BURST_SIZE="{{ fastcapa_rx_burst_size }}"
TX_BURST_SIZE="{{ fastcapa_tx_burst_size }}"
NB_RX_DESC="{{ fastcapa_nb_rx_desc }}"
NB_RX_QUEUE="{{ fastcapa_nb_rx_queue }}"
TX_RING_SIZE="{{ fastcapa_tx_ring_size }}"

DAEMON="{{ fastcapa_prefix }}/{{ fastcapa_bin }}"
DAEMONOPTS+=" "
DAEMONOPTS+=" -- "
DAEMONOPTS+="-p $PORT_MASK "
DAEMONOPTS+="-t $KAFKA_TOPIC "
DAEMONOPTS+="-c $KAFKA_CONFIG "
DAEMONOPTS+="-b $RX_BURST_SIZE "
DAEMONOPTS+="-w $TX_BURST_SIZE "
DAEMONOPTS+="-d $NB_RX_DESC "
DAEMONOPTS+="-q $NB_RX_QUEUE "
DAEMONOPTS+="-x $TX_RING_SIZE "

case "$1" in
  start)
    printf "%-50s" "Starting $NAME..."
    echo "$NOW:  Starting $NAME..." >> $DAEMONLOG

    mkdir -p $LOGROOT
    touch $DAEMONLOG
    touch $DAEMONERR

    cd $DAEMON_PATH
    echo "$DAEMON $DAEMONOPTS >> $DAEMONLOG 2> $DAEMONERR" >> $DAEMONLOG

    if [ -f $PIDFILE ]; then
        printf "%s\n" "Already running"
    else
        PID=`$DAEMON $DAEMONOPTS >> $DAEMONLOG 2> $DAEMONERR & echo $!`
        if [ -z $PID ]; then
            printf "%s\n" "Fail"
        else
            echo $PID > $PIDFILE
            printf "%s\n" "Ok"
        fi
    fi
  ;;

  status)
    printf "%-50s" "Checking $NAME..."
    if [ -f $PIDFILE ]; then
      PID=`cat $PIDFILE`
      if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
        printf "%s\n" "Process dead but pidfile exists"
      else
        echo "Running"
      fi
    else
      printf "%s\n" "Service not running"
    fi
  ;;

  stop)
    printf "%-50s" "Stopping $NAME"
    PID=`cat $PIDFILE`
    cd $DAEMON_PATH
    if [ -f $PIDFILE ]; then
      while sleep 1
        echo -n "."
        kill -0 $PID >/dev/null 2>&1
      do
        kill -SIGINT $PID
      done
      printf "%s\n" "Ok"
      rm -f $PIDFILE
    else
        printf "%s\n" "pidfile not found"
    fi
  ;;

  restart)
    $0 stop
    $0 start
  ;;

  tail)
    tail -F $LOGROOT/*
  ;;

  kill)
    printf "%-50s" "Force killing $NAME"
    PID=`cat $PIDFILE`
    cd $DAEMON_PATH
    if [ -f $PIDFILE ]; then
      while sleep 1
        echo -n "."
        kill -0 $PID >/dev/null 2>&1
      do
        kill -SIGTERM $PID
      done
      printf "%s\n" "Ok"
      rm -f $PIDFILE
    else
        printf "%s\n" "pidfile not found"
    fi
  ;;

  *)
    echo "Usage: $0 {status|start|stop|restart|kill|tail}"
    exit 1
esac
